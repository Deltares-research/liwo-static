name: Cypress Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  install:
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          # TODO: also store  build cache...
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      # report machine parameters
      - run: npx cypress info
      - run: node -p 'os.cpus()'
      - run: npm ci
      - run: npm run build


  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci
      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v2
        with:
          # we have already installed all dependencies above
          install: false
          start: npm run serve
          wait-on: "http://localhost:8080"
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: false
          # group: "UI - Chrome"
          spec: tests/e2e/specs/ui/**/*
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # enable after all tests are working & this action doesn't time-out
  # ui-firefox-tests:
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   container:
  #     image: cypress/browsers:node12.18.3-chrome87-ff82
  #     options: --user 1001
  #   needs: install
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.npm
  #         key: npm-${{ hashFiles('package-lock.json') }}
  #         restore-keys: npm-

  #     - name: Install dependencies
  #       run: npm ci
  #     - name: "UI Tests - Firefox"
  #       uses: cypress-io/github-action@v2
  #       with:
  #         # we have already installed all dependencies above
  #         install: false
  #         start: npm run serve
  #         wait-on: "http://localhost:8080"
  #         wait-on-timeout: 120
  #         browser: firefox
  #         record: true
  #         parallel: false
  #         # group: "UI - Firefox"
  #         spec: tests/e2e/specs/ui/**/*
  #       env:
  #         CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
